{
  "title": "Project Constitution Schema",
  "type": "object",
  "properties": {
    "project_name": {
      "type": "string",
      "description": "The official name of the project."
    },
    "core_mission": {
      "type": "string",
      "description": "A single, concise sentence defining the primary purpose and goal of the project."
    },
    "architectural_paradigm": {
      "type": "string",
      "description": "The fundamental architectural pattern to be used (e.g., 'Microservices', 'Monolithic', 'Serverless', 'Event-Driven')."
    },
    "primary_language_and_tech_stack": {
      "type": "object",
      "description": "The non-negotiable core technologies.",
      "properties": {
        "language": { "type": "string" },
        "backend_framework": { "type": "string" },
        "frontend_framework": { "type": "string" },
        "database": { "type": "string" }
      },
      "required": ["language"]
    },
    "key_data_structures": {
      "type": "array",
      "description": "An evolving list of the most critical, globally-used data structures or entities. This is where new, validated entities would be added.",
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" }
        }
      }
    },
    "global_dependencies_and_interfaces": {
      "type": "array",
      "description": "An evolving list of essential external libraries, APIs, or services that the project depends on. This prevents re-declaration.",
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "version": { "type": "string" },
          "reason": { "type": "string" }
        }
      }
    },
    "non_functional_requirements": {
      "type": "array",
      "description": "A list of critical, project-wide constraints.",
      "items": {
        "type": "object",
        "properties": {
          "requirement": { "type": "string", "description": "e.g., 'Security', 'Performance', 'Scalability'" },
          "constraint": { "type": "string", "description": "e.g., 'Must use JWT for authentication', 'API response time < 200ms'" }
        }
      }
    },
    "project_file_map": {
      "type": "object",
      "description": "A virtual map of the project's file and directory structure. This is updated by the validator after each file operation.",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["directory", "file"] },
          "description": { "type": "string", "description": "A brief description of the file or directory's purpose." },
          "children": { "$ref": "#/properties/project_file_map" }
        }
      }
    }
  },
  "required": [
    "project_name",
    "core_mission",
    "architectural_paradigm",
    "primary_language_and_tech_stack"
  ]
}
