# Configuration for Hierarchical Planner

# Default provider to use if a specific agent provider is not set.
# Options: "gemini", "anthropic", "deepseek"
default_provider: gemini

# Per-agent provider configuration. This allows using different LLMs for
# different tasks (e.g., a powerful model for planning, a faster one for validation).
agents:
  founding_architect:
    provider: gemini
  planner:
    provider: gemini
  qa_validator:
    provider: gemini
  constitution_manager:
    provider: gemini

# --- API Key and Model Settings ---

# Gemini configuration
api:
  # API Key: Can be the key itself, an environment variable name (e.g., GEMINI_API_KEY),
  # or null/empty to rely solely on the environment variable.
  key: GEMINI_API_KEY
  model_name: gemini-2.5-pro # Default model for Gemini
  temperature: 0.6
  max_output_tokens: 8192
  retries: 3

# Anthropic configuration
anthropic:
  # API Key for Anthropic API
  api_key: ANTHROPIC_API_KEY
  model_name: claude-sonnet-4 # Default model for Anthropic
  temperature: 0.7
  max_tokens: 8192
  retries: 3

# DeepSeek configuration
deepseek: # deepseek-reasoner
  # API Key for DeepSeek API
    # top_p, and temperature do not apply to the reasoner model
  api_key: DEEPSEEK_API_KEY
  base_url: https://api.deepseek.com/v1
  model_name: deepseek-reasoner
  max_tokens: 64000  # DO NOT CHANGE THIS VALUE
  retries: 3
  supported_features: function_calling, JSON_output, chat_completion, chat_prefix_completion_beta

deepseek-chat:
  api_key: DEEPSEEK_API_KEY
  base_url: https://api.deepseek.com/v1
  model_name: deepseek-chat
  temperature: 0.6
  max_tokens: 8000
  retries: 3
  top_p: 1.0
  supported_features: function_calling, JSON_output, chat_completion, chat_prefix_completion_beta


# OpenAI configuration
openai:
  # API Key for OpenAI API
  api_key: OPENAI_API_KEY
  model_name: o4-mini-2025-04-16
  reasoning_effort: medium
  retries: 3

# --- File and Logging Settings ---

files:
  # Default file paths relative to the hierarchical_planner directory
  default_task: task.txt
  default_output: reasoning_tree.json
  default_validated_output: reasoning_tree_validated.json
  default_project_dir: generated_project

logging:
  # Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
  level: INFO
  # Log file path relative to the hierarchical_planner directory
  log_file: logs/planner.log
  log_to_console: true
